//Remove Element
//Given an array and a value, remove all instances of that value in place and return the new length.
//The order of elements can be changed. It doesn't matter what you leave beyond the new length.
#include<iostream>
#include<vector>

using namespace std;

class Solution {
public:
	int removeElement(vector<int>& nums, int val) {
		int length = nums.size();
		if (length == 0)return 0;//空数组
		else if (length == 1){//只有一个数
			if (val == nums[0]){
				nums.erase(nums.begin()); return 0;
			}
			else return 1;
		}
		else{
			vector<int>::iterator it;
			it = nums.begin();
			while (it != nums.end()){
				if (*it == val){ it = nums.erase(it); }
				else{ it++; }
			}
			length = nums.size();
			return length;
		}
	}
};

//测试
int main()
{
	vector<int> array = {1,3,3};
	auto it = array.begin();
	while (it != array.end()){
		cout << *it << ',';
		it++;
	}
	cout << endl << "************" << endl;;
	Solution object;
	int length = 0;
	length=object.removeElement(array,3);
	cout << "length="<<length << endl;

	auto ia = array.begin();
	while (ia != array.end()){
		cout << *ia << ',';
		ia++;
	}
	cout << endl << "************" << endl;;
	return 0;
}
