//Move Zeroes
//Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.
//For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

//Note:
//You must do this in - place without making a copy of the array.
//Minimize the total number of operations.
#include<iostream>
#include<vector>

using namespace std;

class Solution {
public:
	void moveZeroes(vector<int>& nums) {
		cout << "nums.size=" << nums.size() << endl;
		int zeros_count = 0;
		vector<int>::iterator it;
		it = nums.begin();//算法：删除容器里的0，并记下0的数量，最后在容器尾部添加N个0
		while (it != nums.end()){
			if (0 == *it){
				nums.erase(it);
				zeros_count++;
			}
			else{ it++; }
		}
		cout << "nums.size=" << nums.size() << endl;
		for (int i = 0; i < zeros_count; i++)
			nums.push_back(0);
		cout << "nums.size=" << nums.size() << endl;
	}
};

